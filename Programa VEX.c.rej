diff a/Programa VEX.c b/Programa VEX.c	(rejected hunks)
@@ -12,75 +12,11 @@
 
 #pragma platform(VEX2)
 #pragma competitionControl(Competition)
-#pragma autonomousDuration(15) 
-#pragma userControlDuration(105)
+#pragma autonomousDuration(15) // MAJ: We need to change that
+#pragma userControlDuration(105) // : We need to change that.
 
 #include "Vex_Competition_Includes.c"
-
-int OFF = 0;
-
-void movement()
-//* ------------------------------------------------------------------ *//
-//* Refresh motor information to activate and go in any direction value = f(x,y) *//
-//* The robot can moves in any directions *//
-//* params: none. *//
-//* changes: get Axis 3 & 4 values and select values for wheel motors. *//
-//* return: this function do not return anything. *//
-//* ------------------------------------------------------------------ *//
-{
-	int x, y;
-	x = vexRT[Ch4];
-	y = vexRT[Ch3];
-	if(x <= 5 && x >= -5)
-	{
-		x = 0;
-	}
-	if(y <= 5 && y >= -5)
-	{
-		y = 0;
-	}
-	motor[9] = (2*(-(x+y)));
-	motor[0] = (2*(-(-x+y)));
-	motor[2] = (2*(-(x-y)));
-	motor[1] = (2*(x+y));
-
-}
-
-void arm()
-{
-	int x;
-	x = vexRT[Ch2];
-	motor[5] = -(2*x);
-	motor[6] = (2*x);
-}
-
-void allInOff()
-//* ------------------------------------------------------------------ *//
-//* Refresh motor information to deactivate value = OFF *//
-//* param: none. *//
-//* changes: array motor values equal global variable OFF. *//
-//* return: this function do not return anything. *//
-//* ------------------------------------------------------------------ *//
-{
-	for(int i=0;i<10;i++)
-	{
-		motor[i]=OFF;
-	}
-}
-
-void pre_auton()
-{
-  // Set bStopTasksBetweenModes to false if you want to keep user created tasks
-  // running between Autonomous and Driver controlled modes. You will need to
-  // manage all user created tasks if set to false.
-  bStopTasksBetweenModes = true;
-    allInOff();
-}
-
-void autonomousControl()
-{
-
-}
+#include "BasicFunctions.h"
 
 
 task usercontrol()
